class PolygonVect
!!!136714.cpp!!!	PolygonVect()
		STLDots.resize(100);
!!!136842.cpp!!!	PolygonVect(in twoDPoints : vector<Point2D>)
		STLDots.resize(twoDPoints.size());
		for(auto i = 0 ; i < twoDPoints.size() ; ++i)
		{
			STLDots[i].setTwoDx(twoDPoints[i].getTwoDx());
			STLDots[i].setTwoDy(twoDPoints[i].getTwoDy());
		}
!!!136970.cpp!!!	PolygonVect(in point : Point2D)
		STLDots.resize(1);
		STLDots[0].setTwoDx(point.getTwoDx());
		STLDots[0].setTwoDy(point.getTwoDy());
!!!137098.cpp!!!	PolygonVect(in rectangleObject : Rectangle)
		STLDots.resize(4);
		double x1,y1;
		double x2,y2;
		double x3,y3;
		double x4,y4;
		double width;
		double height;
		width = rectangleObject.getWidth();
		height = rectangleObject.getHeight();
		x1 = rectangleObject.getXCoordinate();
		y1 = rectangleObject.getYCoordinate();
		x2 = x1;
		y2 = y1 + height;
		x3 = x1 + width;
		y3 = y1 + height;
		x4 = x1 + width;
		y4 = y1;

		STLDots[0].setTwoDx(x1);
		STLDots[0].setTwoDy(y1);

		STLDots[1].setTwoDx(x2);
		STLDots[1].setTwoDy(y2);

		STLDots[2].setTwoDx(x3);
		STLDots[2].setTwoDy(y3);

		STLDots[3].setTwoDx(x4);
		STLDots[3].setTwoDy(y4);

!!!137226.cpp!!!	PolygonVect(in triangleObject : Triangle)
		double x1,y1,x2,y2,x3,y3;
		double width;
		STLDots.resize(3);
		width = triangleObject.getWidth();
		x1 = triangleObject.getX1Coordinate();
		y1 = triangleObject.getY1Coordinate();
		x2 = triangleObject.getX2Coordinate();
		y2 = triangleObject.getY2Coordinate();
		x3 = triangleObject.getX3Coordinate();
		y3 = triangleObject.getY3Coordinate();

		STLDots[0].setTwoDx(x1);
		STLDots[0].setTwoDy(y1);

		STLDots[1].setTwoDx(x2);
		STLDots[1].setTwoDy(y2);

		STLDots[2].setTwoDx(x3);
		STLDots[2].setTwoDy(y3);
!!!137354.cpp!!!	PolygonVect(in circleObject : Circle)
		double counterDegree = 0;
		STLDots.resize(100);
		double x,y,radius;
		double tempx, tempy;
		x = circleObject.getXCoordinate();
		y = circleObject.getYCoordinate();
		radius = circleObject.getRadius();
		for(auto i = 0 ; i < 100 ; ++i)
		{
			counterDegree += 3.6;
			tempx = x + radius * cos(counterDegree * 3.14 / 180);
			tempy = y + radius * sin(counterDegree * 3.14 / 180);
			STLDots[i].setTwoDx(tempx);
			STLDots[i].setTwoDy(tempy);
			
		}		
!!!137482.cpp!!!	PolygonVect(in theCapacity : int)
		STLDots.resize(theCapacity);
!!!137610.cpp!!!	operator [](in theIndex : int) : PolygonVect::Point2D
		return STLDots[theIndex];
!!!137866.cpp!!!	operator ==(in rtSide : PolygonVect) : bool
		bool isEqual = true;
		for(auto i = 0 ; i < STLDots.size() ; ++i)
		{
			if((STLDots[i].getTwoDx() == rtSide.STLDots[i].getTwoDx()) && (STLDots[i].getTwoDy() == rtSide.STLDots[i].getTwoDy()))
			{
				//very good.
			}
			else
				isEqual = false;
		}
		return isEqual;
!!!137994.cpp!!!	operator !=(in rtSide : PolygonVect) : bool
		bool isEqual = true;
		for(auto i = 0 ; i < STLDots.size() ; ++i)
		{
			if((STLDots[i].getTwoDx() == rtSide.STLDots[i].getTwoDx()) && (STLDots[i].getTwoDy() == rtSide.STLDots[i].getTwoDy()))
			{
				//very good.
			}
			else
				isEqual = false;
		}
		return !(isEqual);
!!!138122.cpp!!!	operator +(in rtSide : PolygonVect) : PolygonVect
		int i;
		int rtSideCapacity;
		int totalCapacity;
		rtSideCapacity = rtSide.STLDots.size();
		totalCapacity = STLDots.size() + rtSideCapacity;
		PolygonVect bigPolygon(totalCapacity);
	

		for(i = 0 ; i < STLDots.size(); ++i)
		{
			bigPolygon.STLDots[i] = STLDots[i];
		}
		for(auto j = i ; j < bigPolygon.STLDots.size() ; ++j)
		{
			i = 0;
			i++;
			bigPolygon.STLDots[j] = rtSide.STLDots[i];
		}

		
		return bigPolygon;
!!!138250.cpp!!!	operator <<(inout output : ostream, in rtSide : PolygonVect) : ostream
		//<polygon points="200,10 250,190 160,210" style="fill:lime;stroke:purple;stroke-width:1" />
		output << "<polygon points =\"";
		for(auto i = 0; i < rtSide.STLDots.size() ; ++i)
		{
			//output << "rtUsed " << rtSide.used << endl; 
			//output << " " << rtSide.connectedDots->getTwoDx() << ',' << rtSide.connectedDots->getTwoDy();
			if(i < rtSide.STLDots.size() - 1)
				output << " " << rtSide.STLDots[i].getTwoDx() << ',' << rtSide.STLDots[i].getTwoDy() << ',';
			else
				output << " " << rtSide.STLDots[i].getTwoDx() << ',' << rtSide.STLDots[i].getTwoDy();
		}
		//output << " " << rtSide.connectedDots[1].getTwoDx() << ',' << rtSide.connectedDots[1].getTwoDy();
		output << "\"";
		output << " style=\"fill:lime;stroke:purple;stroke-width:1\" />";
		return output;

!!!138378.cpp!!!	operator =(in rightSide : PolygonVect) : PolygonVect
		if(STLDots.size()!= rightSide.STLDots.size())
		{
			STLDots.clear();
			
			STLDots.resize(rightSide.STLDots.size());
		}
		
			for(auto i = 0; i <rightSide.STLDots.size() ; ++i)
			{

				STLDots[i].setTwoDx(rightSide.STLDots[i].getTwoDx());
				STLDots[i].setTwoDy(rightSide.STLDots[i].getTwoDy());
			}
		
		return *this;
!!!138506.cpp!!!	operator ++() : Shape
		Shape *a;
		cerr << "You shouldn't increment Polygon objects." << endl;
		return a;
!!!138634.cpp!!!	operator ++(in  : int) : Shape
		Shape *a;
		cerr << "You shouldn't increment Polygon objects." << endl;
		return a;
!!!138762.cpp!!!	operator --() : Shape
		Shape *a;
		cerr << "You shouldn't increment Polygon objects." << endl;
		return a;
!!!138890.cpp!!!	operator --(in  : int) : Shape
		Shape *a;
		cerr << "You shouldn't increment Polygon objects." << endl;
		return a;
